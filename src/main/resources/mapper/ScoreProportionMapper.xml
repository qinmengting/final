<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qin.dal.mapper.ScoreProportionMapper">
  <resultMap id="BaseResultMap" type="com.qin.domain.ScoreProportion">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="subgroup" jdbcType="VARCHAR" property="subgroup" />
    <result column="attendance_prop" jdbcType="DOUBLE" property="attendanceProp" />
    <result column="usually_prop" jdbcType="DOUBLE" property="usuallyProp" />
    <result column="work_prop" jdbcType="DOUBLE" property="workProp" />
    <result column="total_attendance" jdbcType="INTEGER" property="totalAttendance" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modify" jdbcType="TIMESTAMP" property="gmtModify" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, subgroup, attendance_prop, usually_prop, work_prop, total_attendance, remark, 
    gmt_create, gmt_modify
  </sql>
  <select id="selectByExample" parameterType="com.qin.domain.ScoreProportionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from score_proportion
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from score_proportion
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from score_proportion
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qin.domain.ScoreProportionExample">
    delete from score_proportion
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qin.domain.ScoreProportion">
    insert into score_proportion (id, subgroup, attendance_prop, 
      usually_prop, work_prop, total_attendance, 
      remark, gmt_create, gmt_modify
      )
    values (#{id,jdbcType=BIGINT}, #{subgroup,jdbcType=VARCHAR}, #{attendanceProp,jdbcType=DOUBLE}, 
      #{usuallyProp,jdbcType=DOUBLE}, #{workProp,jdbcType=DOUBLE}, #{totalAttendance,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModify,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qin.domain.ScoreProportion">
    insert into score_proportion
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="subgroup != null">
        subgroup,
      </if>
      <if test="attendanceProp != null">
        attendance_prop,
      </if>
      <if test="usuallyProp != null">
        usually_prop,
      </if>
      <if test="workProp != null">
        work_prop,
      </if>
      <if test="totalAttendance != null">
        total_attendance,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModify != null">
        gmt_modify,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="subgroup != null">
        #{subgroup,jdbcType=VARCHAR},
      </if>
      <if test="attendanceProp != null">
        #{attendanceProp,jdbcType=DOUBLE},
      </if>
      <if test="usuallyProp != null">
        #{usuallyProp,jdbcType=DOUBLE},
      </if>
      <if test="workProp != null">
        #{workProp,jdbcType=DOUBLE},
      </if>
      <if test="totalAttendance != null">
        #{totalAttendance,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null">
        #{gmtModify,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qin.domain.ScoreProportionExample" resultType="java.lang.Long">
    select count(*) from score_proportion
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update score_proportion
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.subgroup != null">
        subgroup = #{record.subgroup,jdbcType=VARCHAR},
      </if>
      <if test="record.attendanceProp != null">
        attendance_prop = #{record.attendanceProp,jdbcType=DOUBLE},
      </if>
      <if test="record.usuallyProp != null">
        usually_prop = #{record.usuallyProp,jdbcType=DOUBLE},
      </if>
      <if test="record.workProp != null">
        work_prop = #{record.workProp,jdbcType=DOUBLE},
      </if>
      <if test="record.totalAttendance != null">
        total_attendance = #{record.totalAttendance,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModify != null">
        gmt_modify = #{record.gmtModify,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update score_proportion
    set id = #{record.id,jdbcType=BIGINT},
      subgroup = #{record.subgroup,jdbcType=VARCHAR},
      attendance_prop = #{record.attendanceProp,jdbcType=DOUBLE},
      usually_prop = #{record.usuallyProp,jdbcType=DOUBLE},
      work_prop = #{record.workProp,jdbcType=DOUBLE},
      total_attendance = #{record.totalAttendance,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{record.gmtModify,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qin.domain.ScoreProportion">
    update score_proportion
    <set>
      <if test="subgroup != null">
        subgroup = #{subgroup,jdbcType=VARCHAR},
      </if>
      <if test="attendanceProp != null">
        attendance_prop = #{attendanceProp,jdbcType=DOUBLE},
      </if>
      <if test="usuallyProp != null">
        usually_prop = #{usuallyProp,jdbcType=DOUBLE},
      </if>
      <if test="workProp != null">
        work_prop = #{workProp,jdbcType=DOUBLE},
      </if>
      <if test="totalAttendance != null">
        total_attendance = #{totalAttendance,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null">
        gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qin.domain.ScoreProportion">
    update score_proportion
    set subgroup = #{subgroup,jdbcType=VARCHAR},
      attendance_prop = #{attendanceProp,jdbcType=DOUBLE},
      usually_prop = #{usuallyProp,jdbcType=DOUBLE},
      work_prop = #{workProp,jdbcType=DOUBLE},
      total_attendance = #{totalAttendance,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{gmtModify,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>